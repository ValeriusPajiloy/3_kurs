#include <iostream>
#include <omp.h>
#include <time.h>
#include <math.h>

int main()
{
	setlocale(LC_ALL, "Russian");

//------------------------------------------------------------------------------------------
//----Задание на Паре-----------------------------------------------------------------------
//------------------------------------------------------------------------------------------
	/*
	int NumOfThreads;
	
#pragma omp parallel
	{
		int ThreadId;
		ThreadId = omp_get_thread_num();
		NumOfThreads = omp_get_num_threads();
		printf("Hello, I am thread number % d from % d\n", ThreadId, NumOfThreads);

	}

	printf("\n\nКол-во потоков = %d\n", NumOfThreads);




	long int N = 100000000;

	clock_t t0 = clock();
	for (long int i = 0; i < N; i++) {
		double j = cos(i);
	}
	clock_t t1 = clock() - t0;

	printf("Время выполнения без OMP - %d \n\n", t1);




	clock_t t2 = clock(); 
#pragma omp parallel
	{
		for (long int i = 0; i < N/8; i++) {
			double j = cos(i);
		}
	}

	clock_t t3 = clock() - t2;

	printf("Время выполнения с OMP - %d \n\n", t3);

	printf("Разница %lf \n\n", (double)t1/(double)t3);*/

	

//------------------------------------------------------------------------------------------
//---------Задание 1------------------------------------------------------------------------
//------------------------------------------------------------------------------------------

	/*printf("\r\nПоследовательная область 1\r\n");
#pragma omp parallel
	{
		printf("Параллельная область\r\n");
	}
	printf("Последовательная область 2\r\n");*/

//------------------------------------------------------------------------------------------
//---------Задание 2------------------------------------------------------------------------
//------------------------------------------------------------------------------------------


//	int NumOfThreads;
//
//#pragma omp parallel
//		{
//			int ThreadId;
//			ThreadId = omp_get_thread_num();
//			NumOfThreads = omp_get_num_threads();
//			printf("Поток номер % d\n", ThreadId);
//
//		}
//
//		printf("\n\nКол-во потоков = %d\n", NumOfThreads);



//------------------------------------------------------------------------------------------
//---------Задание 3------------------------------------------------------------------------
//------------------------------------------------------------------------------------------





//------------------------------------------------------------------------------------------
//---------Задание 4------------------------------------------------------------------------
//------------------------------------------------------------------------------------------





//------------------------------------------------------------------------------------------
//---------Задание 5------------------------------------------------------------------------
//------------------------------------------------------------------------------------------



//------------------------------------------------------------------------------------------

}
